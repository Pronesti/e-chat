{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Diego Pronesti\\\\Desktop\\\\e-chat\\\\client\\\\pages\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport openSocket from 'socket.io-client';\nimport './index.css';\n\nvar App = function App() {\n  var socket = openSocket('http://localhost:3001/');\n  var newChat = [];\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState([{\n    msg: \"Hola\"\n  }, {\n    msg: \"Todo Bien?\"\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      chat = _useState4[0],\n      setChat = _useState4[1];\n\n  useEffect(function () {\n    socket.on('new message', function (msg) {\n      writeMessage(msg);\n    });\n  }, []);\n\n  var writeMessage = function writeMessage(msg) {//newChat = chat.concat(msg); \n    //newChat = [...chat, msg]; this two takes inital State, but doesn not work with modified state \n    //setChat(newChat);\n    //chat.push(msg); //this mutates :( and works, but does not re-render itself\n  };\n\n  var sendMessage = function sendMessage() {\n    if (message === \"\") {\n      alert(\"Write something please\");\n    } else {\n      socket.emit('send message', message);\n      setMessage(\"\");\n    }\n\n    console.log(chat);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    id: \"messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, chat.map(function (msg, index) {\n    return React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, msg.msg);\n  })), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"m\",\n    autoComplete: \"off\",\n    value: message,\n    onChange: function onChange(e) {\n      return setMessage(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Send\")));\n};\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Diego Pronesti\\Desktop\\e-chat\\client\\pages\\index.js"],"names":["React","useEffect","useState","openSocket","App","socket","newChat","message","setMessage","msg","chat","setChat","on","writeMessage","sendMessage","alert","emit","console","log","map","index","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,aAAP;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,MAAIC,MAAM,GAAGF,UAAU,CAAC,wBAAD,CAAvB;AACA,MAAIG,OAAO,GAAE,EAAb;;AAFgB,kBAIcJ,QAAQ,CAAC,EAAD,CAJtB;AAAA;AAAA,MAITK,OAJS;AAAA,MAIAC,UAJA;;AAAA,mBAKQN,QAAQ,CAAC,CAAC;AAACO,IAAAA,GAAG,EAAC;AAAL,GAAD,EAAc;AAACA,IAAAA,GAAG,EAAC;AAAL,GAAd,CAAD,CALhB;AAAA;AAAA,MAKTC,IALS;AAAA,MAKHC,OALG;;AAOhBV,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,MAAM,CAACO,EAAP,CAAU,aAAV,EAAyB,UAASH,GAAT,EAAa;AACpCI,MAAAA,YAAY,CAACJ,GAAD,CAAZ;AACA,KAFF;AAGD,GAJQ,EAIP,EAJO,CAAT;;AAMA,MAAMI,YAAY,GAAG,SAAfA,YAAe,CAACJ,GAAD,EAAS,CAC7B;AACA;AACA;AACA;AACA,GALD;;AAOA,MAAMK,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAGP,OAAO,KAAK,EAAf,EAAkB;AAChBQ,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACD,KAFD,MAEK;AACHV,MAAAA,MAAM,CAACW,IAAP,CAAY,cAAZ,EAA4BT,OAA5B;AACAC,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;;AACDS,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACH,GARC;;AAUA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAI,IAAA,EAAE,EAAC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,IAAI,CAACS,GAAL,CAAS,UAACV,GAAD,EAAMW,KAAN;AAAA,WAAgB;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBX,GAAG,CAACA,GAArB,CAAhB;AAAA,GAAT,CAAnB,CADA,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,EAAE,EAAC,GAAV;AAAc,IAAA,YAAY,EAAC,KAA3B;AAAiC,IAAA,KAAK,EAAEF,OAAxC;AAAiD,IAAA,QAAQ,EAAE,kBAACc,CAAD;AAAA,aAAOb,UAAU,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AAAA,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAET,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CAFF,CADF;AASD,CAvCD;;AAyCA,eAAeV,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport openSocket from 'socket.io-client';\r\nimport './index.css';\r\n\r\nconst App = () => {\r\n  var socket = openSocket('http://localhost:3001/')\r\n  var newChat= [];\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [chat, setChat] = useState([{msg:\"Hola\"},{msg:\"Todo Bien?\"}])\r\n\r\n  useEffect(() => {  \r\n    socket.on('new message', function(msg){\r\n      writeMessage(msg)\r\n     });\r\n  },[])\r\n\r\n  const writeMessage = (msg) => {\r\n   //newChat = chat.concat(msg); \r\n   //newChat = [...chat, msg]; this two takes inital State, but doesn not work with modified state \r\n   //setChat(newChat);\r\n   //chat.push(msg); //this mutates :( and works, but does not re-render itself\r\n  }\r\n\r\n  const sendMessage = () => {\r\n    if(message === \"\"){\r\n      alert(\"Write something please\");\r\n    }else{\r\n      socket.emit('send message', message);\r\n      setMessage(\"\");\r\n    }\r\n    console.log(chat);\r\n}\r\n\r\n  return (\r\n    <div>\r\n    <ul id=\"messages\">{chat.map((msg, index) => <li key={index}>{msg.msg}</li>)}</ul>\r\n      <form>\r\n        <input id=\"m\" autoComplete=\"off\" value={message} onChange={(e) => setMessage(e.target.value)}/>\r\n        <button type=\"button\" onClick={sendMessage}>Send</button>\r\n      </form>\r\n      \r\n    </div>)\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}